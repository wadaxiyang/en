<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Set Up a Script in WSL2 or Linux to Easily Enable Command Line Proxy</title>
    <url>/en/2025/02/21/WSL2_proxy/</url>
    <content><![CDATA[<h1 id="Set-Up-a-Script-in-WSL2-or-Linux-to-Easily-Enable-Command-Line-Proxy"><a href="#Set-Up-a-Script-in-WSL2-or-Linux-to-Easily-Enable-Command-Line-Proxy" class="headerlink" title="Set Up a Script in WSL2 or Linux to Easily Enable Command Line Proxy"></a>Set Up a Script in WSL2 or Linux to Easily Enable Command Line Proxy</h1><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><p>A proxy server that supports local network sharing.</p>
<h2 id="Main-Content"><a href="#Main-Content" class="headerlink" title="Main Content"></a>Main Content</h2><p>The command line in WSL2 cannot directly use the system proxy, or on some Linux servers, we may want to use a proxy in the current shell. In such cases, you can achieve proxy functionality through commands:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;地址&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure>

<p>Additionally, <code>git</code> can also be configured to use a proxy address:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global http.https://github.com.proxy <span class="variable">$&#123;地址&#125;</span></span><br><span class="line">git config --global https.https://github.com.proxy <span class="variable">$&#123;地址&#125;</span></span><br></pre></td></tr></table></figure>

<p>Manually setting this can be cumbersome, so it is integrated into the script.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># touch a new file</span></span><br><span class="line">vim yourPath/proxy.sh</span><br></pre></td></tr></table></figure>

<h2 id="For-WSL2-Versions-Before-2-0"><a href="#For-WSL2-Versions-Before-2-0" class="headerlink" title="For WSL2 Versions Before 2.0"></a>For WSL2 Versions Before 2.0</h2><p>Write the following content:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">wslip=$(hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">port=yourPort</span><br><span class="line">testurl=yourUrl</span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">set_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  git config --global http.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line">  git config --global https.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been opened.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">unset_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTP_PROXY</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTPS_PROXY</span><br><span class="line">  <span class="built_in">unset</span> ALL_PROXY</span><br><span class="line">  <span class="built_in">unset</span> all_proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> https.https://github.com.proxy</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been closed.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">test_setting</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Host IP:&quot;</span> <span class="variable">$&#123;hostip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;WSL IP:&quot;</span> <span class="variable">$&#123;wslip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Try to connect to testUrl...&quot;</span></span><br><span class="line">  resp=$(curl -I -s --connect-timeout 5 -m 5 -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> -o /dev/null <span class="variable">$&#123;testurl&#125;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;resp&#125;</span> = 200 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup succeeded!&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup failed!&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;set&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  set_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;unset&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  unset_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;test&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  test_setting</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Unsupported arguments.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<p>To explain, the first line is mainly used to obtain the host IP. Because for some reason, the proxy IP of the host’s WLAN sharing changes every time WSL starts, this command is used to get the current IP.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>Note!!! Here you need to set the port number for proxy sharing, i.e., the <code>port</code> variable in the script, and set the website URL to test the connection, i.e., the <code>testurl</code> variable in the script.</p>
<h3 id="About-SOCKS-Comments"><a href="#About-SOCKS-Comments" class="headerlink" title="About SOCKS Comments"></a>About SOCKS Comments</h3><p>Here we explain the commented-out SOCKS5 proxy. For SOCKS proxies, you need to know which version of SOCKS your proxy server supports: whether it’s SOCKS5, SOCKS4, or SOCKS5h. The following are the corresponding relationships:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># socks4</span></span><br><span class="line">socks://&#123;ip&#125;:&#123;port&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># socks5</span></span><br><span class="line">socks5://&#123;ip&#125;:&#123;port&#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment"># socks5h</span></span><br><span class="line">socks5h://&#123;ip&#125;:&#123;port&#125;</span><br></pre></td></tr></table></figure>

<p>In bash, if it is commented out, it means that the SOCKS proxy variable is not set. There is no need to specifically comment out the <code>all_proxy</code> variable afterward; it will be set as an empty string. By default, it is commented out because in most cases, an HTTP proxy is sufficient. If you need a SOCKS proxy, please uncomment the corresponding SOCKS version after determining which SOCKS version your proxy server supports.</p>
<h2 id="For-WSL2-Versions-2-0-and-Later-and-General-Linux"><a href="#For-WSL2-Versions-2-0-and-Later-and-General-Linux" class="headerlink" title="For WSL2 Versions 2.0 and Later, and General Linux"></a>For WSL2 Versions 2.0 and Later, and General Linux</h2><h3 id="For-WSL"><a href="#For-WSL" class="headerlink" title="For WSL"></a>For WSL</h3><p>Microsoft has updated WSL to allow for easy sharing of the system network.</p>
<p>At this point, if you directly open WSL without any configuration, you should see:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wsl: 检测到 localhost 代理配置，但未镜像到 WSL。NAT 模式下的 WSL 不支持 localhost 代理。</span><br></pre></td></tr></table></figure>

<p>Open or create the WSL configuration file (located at <code>C:/Users/%Your username%/.wslconfig</code>) and add the following content:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[experimental]</span><br><span class="line">autoMemoryReclaim=gradual  </span><br><span class="line">networkingMode=mirrored</span><br><span class="line">dnsTunneling=<span class="literal">true</span></span><br><span class="line">firewall=<span class="literal">true</span></span><br><span class="line">autoProxy=<span class="literal">true</span></span><br></pre></td></tr></table></figure>

<p>This resolves the issue, and because it is mirrored to WSL, the host’s IP will default to <code>127.0.0.1</code>.</p>
<p>Therefore, the first line in the previous script can be changed to:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">changed to</span><br><span class="line">hostip=127.0.0.1</span><br></pre></td></tr></table></figure>

<h3 id="For-General-Linux"><a href="#For-General-Linux" class="headerlink" title="For General Linux"></a>For General Linux</h3><p>For general Linux, it is even simpler; just set <code>hostip</code> to the proxy server address.</p>
<h2 id="Add-to-Bash-or-Zsh"><a href="#Add-to-Bash-or-Zsh" class="headerlink" title="Add to Bash or Zsh"></a>Add to Bash or Zsh</h2><p>In Bash, add the command as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim ~/.bashrc</span><br><span class="line"><span class="comment"># 添加命令</span></span><br><span class="line"><span class="built_in">alias</span> proxy=<span class="string">&quot;source yourPath/proxy.sh&quot;</span></span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line"><span class="built_in">source</span> ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>You can then enable the proxy using the <code>proxy</code> command.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">proxy <span class="built_in">set</span> 开启</span><br><span class="line">proxy <span class="built_in">unset</span> 关闭</span><br><span class="line">proxy <span class="built_in">test</span> 测试</span><br></pre></td></tr></table></figure>

<h2 id="Add-Authentication-Information"><a href="#Add-Authentication-Information" class="headerlink" title="Add Authentication Information"></a>Add Authentication Information</h2><p>Sometimes you need to include username and password authentication information. You can modify the <code>PROXY</code> variable as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">username=yourUsername</span><br><span class="line">password=yourPassword</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;username&#125;</span>:<span class="variable">$&#123;password&#125;</span>@<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br></pre></td></tr></table></figure>

<p>Complete version is as follows:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">hostip=$(<span class="built_in">cat</span> /etc/resolv.conf | grep nameserver | awk <span class="string">&#x27;&#123; print $2 &#125;&#x27;</span>)</span><br><span class="line">wslip=$(hostname -I | awk <span class="string">&#x27;&#123;print $1&#125;&#x27;</span>)</span><br><span class="line">port=yourPort</span><br><span class="line">testurl=yourUrl</span><br><span class="line"> </span><br><span class="line">username=yourUsername</span><br><span class="line">password=yourPassword</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">PROXY_HTTP=<span class="string">&quot;http://<span class="variable">$&#123;username&#125;</span>:<span class="variable">$&#123;password&#125;</span>@<span class="variable">$&#123;hostip&#125;</span>:<span class="variable">$&#123;port&#125;</span>&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"><span class="comment">#PROXY_SOCKS5=&quot;socks5h://$&#123;username&#125;:$&#123;password&#125;@$&#123;hostip&#125;:$&#123;port&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">set_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">export</span> http_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTP_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> https_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> HTTPS_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_HTTP&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">export</span> ALL_PROXY=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line">  <span class="built_in">export</span> all_proxy=<span class="string">&quot;<span class="variable">$&#123;PROXY_SOCKS5&#125;</span>&quot;</span></span><br><span class="line"> </span><br><span class="line">  git config --global http.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line">  git config --global https.https://github.com.proxy <span class="variable">$&#123;PROXY_HTTP&#125;</span></span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been opened.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">unset_proxy</span></span>()&#123;</span><br><span class="line">  <span class="built_in">unset</span> http_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTP_PROXY</span><br><span class="line">  <span class="built_in">unset</span> https_proxy</span><br><span class="line">  <span class="built_in">unset</span> HTTPS_PROXY</span><br><span class="line">  <span class="built_in">unset</span> ALL_PROXY</span><br><span class="line">  <span class="built_in">unset</span> all_proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> http.https://github.com.proxy</span><br><span class="line">  git config --global --<span class="built_in">unset</span> https.https://github.com.proxy</span><br><span class="line"> </span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Proxy has been closed.&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">test_setting</span></span>()&#123;</span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Host IP:&quot;</span> <span class="variable">$&#123;hostip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;WSL IP:&quot;</span> <span class="variable">$&#123;wslip&#125;</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Try to connect to testUrl...&quot;</span></span><br><span class="line">  resp=$(curl -I -s --connect-timeout 5 -m 5 -w <span class="string">&quot;%&#123;http_code&#125;&quot;</span> -o /dev/null <span class="variable">$&#123;testurl&#125;</span>)</span><br><span class="line">  <span class="keyword">if</span> [ <span class="variable">$&#123;resp&#125;</span> = 200 ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup succeeded!&quot;</span></span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Proxy setup failed!&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;set&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  set_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;unset&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  unset_proxy</span><br><span class="line"> </span><br><span class="line"><span class="keyword">elif</span> [ <span class="string">&quot;<span class="variable">$1</span>&quot;</span> = <span class="string">&quot;test&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">  test_setting</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;Unsupported arguments.&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>

<h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><p><a href="https://blog.csdn.net/weixin_62355896/article/details/134458330">使用WSL2时控制台输出“wsl: 检测到 localhost 代理配置，但未镜像到 WSL。NAT 模式下的 WSL 不支持 localhost 代理-CSDN博客</a></p>
<p><a href="https://www.cnblogs.com/tuilk/p/16287472.html">wsl2配置代理 - 博客园 (cnblogs.com)</a></p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>WSL</tag>
        <tag>linux</tag>
        <tag>代理</tag>
      </tags>
  </entry>
  <entry>
    <title>Beautify bash</title>
    <url>/en/2024/01/08/bash-beautiful/</url>
    <content><![CDATA[<h1 id="Beautify-bash"><a href="#Beautify-bash" class="headerlink" title="Beautify bash"></a>Beautify bash</h1><p>Considering zsh is not very friendly to machines with weak performance, I referred to the methods of online experts to beautify bash.</p>
<h2 id="Configure-ble-sh"><a href="#Configure-ble-sh" class="headerlink" title="Configure ble.sh"></a>Configure ble.sh</h2><p><a href="https://github.com/akinomyoga/ble.sh">GitHub link</a></p>
<p>Here is the official installation guide:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive --depth 1 --shallow-submodules https://github.com/akinomyoga/ble.sh.git</span><br><span class="line">make -C ble.sh install PREFIX=~/.local</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;source ~/.local/share/blesh/ble.sh&#x27;</span> &gt;&gt; ~/.bashrc</span><br></pre></td></tr></table></figure>

<p>Afterwards, use <code>source ~/.bashrc</code> to check the effect:</p>
<p><img src="/en/2024/01/08/bash-beautiful/image-20250222133949356.png" alt="image-20250222133949356"></p>
<p>It uses the same autosuggestions logic as zsh, using the -&gt; key to complete historical commands.</p>
<h2 id="Configure-bash-appearance"><a href="#Configure-bash-appearance" class="headerlink" title="Configure bash appearance"></a>Configure bash appearance</h2><p>Referring to an expert’s article, a Fish-like path folding was implemented, and the result of the last command execution is judged by the username color.</p>
<p>Create file my_bash.sh:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="function"><span class="title">_fish_collapsed_pwd</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> <span class="built_in">pwd</span>=<span class="string">&quot;<span class="variable">$1</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> home=<span class="string">&quot;<span class="variable">$HOME</span>&quot;</span></span><br><span class="line">    <span class="built_in">local</span> size=<span class="variable">$&#123;#home&#125;</span></span><br><span class="line">    [[ <span class="variable">$#</span> == 0 ]] &amp;&amp; <span class="built_in">pwd</span>=<span class="string">&quot;<span class="variable">$PWD</span>&quot;</span></span><br><span class="line">    [[ -z <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> ]] &amp;&amp; <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">if</span> [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;/&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">elif</span> [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;<span class="variable">$home</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;~&quot;</span></span><br><span class="line">        <span class="built_in">return</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    [[ <span class="string">&quot;<span class="variable">$pwd</span>&quot;</span> == <span class="string">&quot;<span class="variable">$home</span>/&quot;</span>* ]] &amp;&amp; <span class="built_in">pwd</span>=<span class="string">&quot;~<span class="variable">$&#123;pwd:$size&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [[ -n <span class="string">&quot;<span class="variable">$BASH_VERSION</span>&quot;</span> ]]; <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">local</span> IFS=<span class="string">&quot;/&quot;</span></span><br><span class="line">        <span class="built_in">local</span> elements=(<span class="variable">$pwd</span>)</span><br><span class="line">        <span class="built_in">local</span> length=<span class="variable">$&#123;#elements[@]&#125;</span></span><br><span class="line">        <span class="keyword">for</span> ((i=<span class="number">0</span>;i&lt;length-<span class="number">1</span>;i++)); <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">local</span> elem=<span class="variable">$&#123;elements[$i]&#125;</span></span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$&#123;#elem&#125;</span> -gt 1 ]]; <span class="keyword">then</span></span><br><span class="line">                elements[<span class="variable">$i</span>]=<span class="variable">$&#123;elem:0:1&#125;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">local</span> elements=(<span class="string">&quot;<span class="variable">$&#123;(s:/:)pwd&#125;</span>&quot;</span>)</span><br><span class="line">        <span class="built_in">local</span> length=<span class="variable">$&#123;#elements&#125;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> &#123;1..$((length-<span class="number">1</span>))&#125;; <span class="keyword">do</span></span><br><span class="line">            <span class="built_in">local</span> elem=<span class="variable">$&#123;elements[$i]&#125;</span></span><br><span class="line">            <span class="keyword">if</span> [[ <span class="variable">$&#123;#elem&#125;</span> &gt; 1 ]]; <span class="keyword">then</span></span><br><span class="line">                elements[<span class="variable">$i</span>]=<span class="variable">$&#123;elem[1]&#125;</span></span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">        <span class="keyword">done</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">local</span> IFS=<span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;elements[*]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">PROMPT_COMMAND=__prompt_command    <span class="comment"># Function to generate PS1 after CMDs</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="title">__prompt_command</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> EXIT=<span class="string">&quot;$?&quot;</span>                <span class="comment"># This needs to be first</span></span><br><span class="line">    PS1=<span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">local</span> RCol=<span class="string">&#x27;\[\e[0m\]&#x27;</span></span><br><span class="line"> </span><br><span class="line">    <span class="built_in">local</span> Red=<span class="string">&#x27;\[\e[0;31m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> Gre=<span class="string">&#x27;\[\e[0;32m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> BYel=<span class="string">&#x27;\[\e[1;33m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> BBlu=<span class="string">&#x27;\[\e[1;34m\]&#x27;</span></span><br><span class="line">    <span class="built_in">local</span> Pur=<span class="string">&#x27;\[\e[0;35m\]&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$EXIT</span> != 0 ]; <span class="keyword">then</span></span><br><span class="line">        PS1+=<span class="string">&quot;<span class="variable">$&#123;Red&#125;</span>\u<span class="variable">$&#123;RCol&#125;</span>&quot;</span>        <span class="comment"># Add red if exit code non 0</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        PS1+=<span class="string">&quot;<span class="variable">$&#123;Gre&#125;</span>\u<span class="variable">$&#123;RCol&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"> </span><br><span class="line">    PS1+=<span class="string">&quot;<span class="variable">$&#123;RCol&#125;</span>@<span class="variable">$&#123;BBlu&#125;</span>\h <span class="variable">$&#123;Pur&#125;</span><span class="subst">$(_fish_collapsed_pwd)</span><span class="variable">$&#123;RCol&#125;</span> &quot;</span></span><br><span class="line">    <span class="built_in">export</span> PROMPT=<span class="string">&#x27;%F&#123;135&#125;%n%f@%F&#123;166&#125;%m%f %F&#123;2&#125;$(_fish_collapsed_pwd)%f&gt; &#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>Then, at the end of .bashrc, source the my_bash.sh file:</p>
<p>Result:</p>
<p><img src="/en/2024/01/08/bash-beautiful/image-20250222134037919.png" alt="image-20250222134037919"></p>
<p>When there is an error status:</p>
<p><img src="/en/2024/01/08/bash-beautiful/image-20250222134053613.png" alt="image-20250222134053613"></p>
<h2 id="Reference-articles"><a href="#Reference-articles" class="headerlink" title="Reference articles:"></a>Reference articles:</h2><p><a href="https://zhuanlan.zhihu.com/p/51008087">你不需要花哨的命令提示符 - 知乎 (zhihu.com)</a></p>
<p><a href="https://stackoverflow.com/questions/16715103/bash-prompt-with-the-last-exit-code">linux - Bash prompt with the last exit code - Stack Overflow</a></p>
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>bash</tag>
        <tag>美化</tag>
      </tags>
  </entry>
  <entry>
    <title>Setting up a C++ environment in VSCode on Mac</title>
    <url>/en/2025/02/22/cpp-for-vscode/</url>
    <content><![CDATA[<h1 id="Setting-up-a-C-environment-in-VSCode-on-Mac"><a href="#Setting-up-a-C-environment-in-VSCode-on-Mac" class="headerlink" title="Setting up a C++ environment in VSCode on Mac"></a>Setting up a C++ environment in VSCode on Mac</h1><p><img src="/en/2025/02/22/cpp-for-vscode/112.jpg" alt="image-20250222123043564"></p>
<p>I only make a backup here.</p>
<p>Reference：<a href="https://blog.csdn.net/Leilani_K/article/details/135952242">in Chinese</a></p>
<p><code>launch.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        </span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: clang++ release and debug file&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppdbg&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;program&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceFolder&#125;/target/$&#123;fileBasenameNoExtension&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;stopAtEntry&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;environment&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// &quot;internalConsoleOptions&quot;: &quot;openOnSessionStart&quot;,</span></span><br><span class="line">            <span class="attr">&quot;externalConsole&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;MIMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;lldb&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;preLaunchTask&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>tasks.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fcolor-diagnostics&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-fansi-escape-codes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-std=c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/*.cpp&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/target/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task of debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;new&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;showReuseMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;clear&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clear &amp;&amp; $&#123;workspaceFolder&#125;/target/hello &amp;&amp; echo&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;presentation&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;echo&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;reveal&quot;</span><span class="punctuation">:</span> <span class="string">&quot;always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;focus&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;panel&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shared&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;showReuseMessage&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;clear&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">false</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build and run&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOn&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;run&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;dependsOrder&quot;</span><span class="punctuation">:</span> <span class="string">&quot;sequence&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppbuild&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: g++ file&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/g++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fdiagnostics-color=always&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task of debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cppbuild&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;C/C++: clang++ file&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-fcolor-diagnostics&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-fansi-escape-codes&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-g&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;file&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-o&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;$&#123;fileDirname&#125;/$&#123;fileBasenameNoExtension&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;options&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;fileDirname&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$gcc&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;detail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task of debug&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<p><code>c_cpp_properties.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Mac&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;includePath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;$&#123;workspaceFolder&#125;/**&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;defines&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;macFrameworkPath&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/System/Library/Frameworks&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cppStandard&quot;</span><span class="punctuation">:</span> <span class="string">&quot;c++17&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;intelliSenseMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;macos-clang-arm64&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;compilerPath&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/usr/bin/clang++&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="number">4</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>cpp</tag>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Setting up Qt 6 for Android Development on Mac</title>
    <url>/en/2025/03/08/qt-for-android-with-mac/</url>
    <content><![CDATA[<h1 id="Setting-up-Qt-6-for-Android-Development-on-Mac"><a href="#Setting-up-Qt-6-for-Android-Development-on-Mac" class="headerlink" title="Setting up Qt 6 for Android Development on Mac"></a>Setting up Qt 6 for Android Development on Mac</h1><h2 id="Configure-Android-Environment"><a href="#Configure-Android-Environment" class="headerlink" title="Configure Android Environment"></a>Configure Android Environment</h2><p>You can also configure it using <code>Android Studio</code>. The advantage is the use of a <code>GUI</code>, although it takes up a significant amount of space.</p>
<h3 id="Configure-JDK"><a href="#Configure-JDK" class="headerlink" title="Configure JDK"></a>Configure JDK</h3><p>Here, you can directly download it using <code>brew</code>.</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">brew install openjdk@17</span><br></pre></td></tr></table></figure>

<p>Note that for <code>Apple Silicon</code>, the default path for the JDK downloaded via <code>brew</code> is</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/opt/homebrew/opt/openjdk@17</span><br></pre></td></tr></table></figure>

<p>You will need this path for later use. As for setting environment variables, add the following configuration to your <code>.bashrc</code> file:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> JAVA_HOME=<span class="string">&quot;/opt/homebrew/opt/openjdk@17&quot;</span>  <span class="comment"># For Apple Silicon</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span>&quot;</span></span><br></pre></td></tr></table></figure>



<h3 id="Configure-Android-Environment-via-Creator"><a href="#Configure-Android-Environment-via-Creator" class="headerlink" title="Configure Android Environment via Creator"></a>Configure Android Environment via Creator</h3><p>If your network conditions allow, you can use <code>Qt Creator</code> to automatically complete the installation.</p>
<p>Go to <code>Devices - Android</code> in <code>Qt Creator</code>.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308162742407.png" alt="image-20250308162742407"></p>
<p>In <code>Qt Creator</code>, set the <code>JDK</code> location to the path where you installed the <code>JDK</code> via <code>brew</code>. Then, click on the <code>SDK</code> settings below. <code>Qt Creator</code> will detect and begin automatically installing any missing packages.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308163059027.png" alt="image-20250308163059027"></p>
<img src="image-20250308163105265.png" alt="image-20250308163105265" style="zoom: 50%;" />

<p>Follow the  instructions to complete the setup.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308163107924.png" alt="image-20250308163107924"></p>
<p>The result is:</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308164215256.png" alt="image-20250308164215256"></p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308164218601.png" alt="image-20250308164218601"></p>
<p>Here, it’s important to note the correspondence between the <code>JDK</code> version and the <code>cmdline tools</code>. <code>Qt Creator</code> actually controls the Android <code>SDK</code> through the <code>cmdline tools</code>, but the <code>cmdline tools</code> are highly dependent on the <code>JDK</code> version. If your version is incorrect, you may encounter <a href="https://blog.csdn.net/yy_xzz/article/details/132135255">issues like these</a>.</p>
<p>Additionally, <code>Qt Creator</code> also configures <code>OpenSSL</code> in the process.<img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308164446236.png" alt="image-20250308164446236"></p>
<h3 id="Manually-Configure-Using-the-sdkmanager-Command-Line-Tool"><a href="#Manually-Configure-Using-the-sdkmanager-Command-Line-Tool" class="headerlink" title="Manually Configure Using the sdkmanager Command Line Tool"></a>Manually Configure Using the sdkmanager Command Line Tool</h3><p>If the installation via <code>Qt Creator</code> fails, you can also complete the installation manually. This section serves as a guide, but the official documentation is already quite comprehensive. Visit the <a href="https://developer.android.google.cn/studio?hl=zh-cn">Android official site</a> and download only the command line tools package.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308111930417.png" alt="image-20250308111930417"></p>
<p>For detailed instructions on configuring the command line tools, see <a href="https://developer.android.google.cn/tools/sdkmanager?hl=zh-cn">sdkmanager | Android Studio | Android Developers</a>.</p>
<p>The main steps are as follows:</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308112107209.png" alt="image-20250308112107209"></p>
<p>My path is as follow</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Users/wadaxiyang/Library/Android/sdk</span><br></pre></td></tr></table></figure>

<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308160544242.png" alt="image-20250308160544242"></p>
<p>Through similar commands, you can download the corresponding <code>platform-tools</code>, etc. This process is essentially the same as what <code>Qt Creator</code> does.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./sdkmanager <span class="string">&quot;platform-tools&quot;</span> <span class="string">&quot;platforms;android-33&quot;</span> --proxy_host=127.0.0.1 --proxy_port=9908 --proxy=http</span><br></pre></td></tr></table></figure>



<h2 id="Configure-Android-Virtual-Machine"><a href="#Configure-Android-Virtual-Machine" class="headerlink" title="Configure Android Virtual Machine"></a>Configure Android Virtual Machine</h2><p>In fact, <code>Qt Creator</code> can also directly configure an <code>Android</code> virtual machine. </p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308165921399.png" alt="image-20250308165921399"></p>
<p>Install image</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308170250522.png" alt="image-20250308170250522"></p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308165646023.png" alt="image-20250308165646023"></p>
<img src="image-20250308165704104.png" alt="image-20250308165704104" style="zoom:50%;" />

<p>Connfig the <code>AVD</code></p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308174812747.png" alt="image-20250308174812747"></p>
<p>And start <code>AVD</code></p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308174940137.png" alt="image-20250308174940137"></p>
<h2 id="Deploy-to-AVD"><a href="#Deploy-to-AVD" class="headerlink" title="Deploy to AVD"></a>Deploy to AVD</h2><p>The installation process for <code>Qt for Android</code> is omitted here. You can refer to <a href="https://blog.csdn.net/curtis0730/article/details/132517462">macOS Install Latest qt6_qt6 for Mac - CSDN Blog</a>, which is well-written.</p>
<p>Use the official example to verify the setup.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308195316944.png" alt="image-20250308195316944"></p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308195423549.png" alt="image-20250308195423549"></p>
<p>Set up the emulator, noting that you need to start the AVD first.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308195951047.png" alt="image-20250308195951047"></p>
<p>Running result</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308200038597.png" alt="image-20250308200038597"></p>
<h2 id="Deploy-to-a-Physical-Device"><a href="#Deploy-to-a-Physical-Device" class="headerlink" title="Deploy to a Physical Device"></a>Deploy to a Physical Device</h2><p>Deploying to a physical device via <code>USB</code> is very similar to using <code>AVD</code>. Here, we mainly focus on signing the <code>apk</code> to enable direct installation.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308201727722.png" alt="image-20250308201727722"></p>
<p>Follow the prompts to create and select accordingly.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308201912872.png" alt="image-20250308201912872"></p>
<p>Afterwards, <code>build</code> to generate the <code>apk</code> in the corresponding directory. Note that the version I am providing here is the <code>release</code> version.</p>
<p><img src="/en/2025/03/08/qt-for-android-with-mac/image-20250308202343260.png" alt="image-20250308202343260"></p>
<p>Result </p>
<img src="d2a775cde896ebd2e2f1b9c57348f1b8_720.jpg" alt="d2a775cde896ebd2e2f1b9c57348f1b8_720" style="zoom:50%;" />
]]></content>
      <categories>
        <category>配置</category>
      </categories>
      <tags>
        <tag>QT</tag>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
